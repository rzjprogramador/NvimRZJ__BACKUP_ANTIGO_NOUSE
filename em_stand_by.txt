PARA MAPS_PLUGS:

-- Complete with Enter Key coc sugest
-- cmd[[
--   inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"
--   inoremap <silent><expr><CR> pumvisible() ? coc#_select_confirm()
--     \: "\<C-g>u\<CR>\<C-r>=coc#on_enter()\<CR>"
-- ]]


-- explorer NerdTree  >>  S-e -- Shift-E 
-- set("n", "<S-e>", ":NERDTreeToggle<CR>", ns)
-- set("i", "<S-e>", ":NERDTreeToggle<CR>", ns)
-- set("n", "<S-E>", ":NERDTreeToggle<CR>R", ns)

-- explorer nativo vim BY TERRO >>  S-e -- Shift-e -- TODO NAO TA ROLANDO - DEVE SER PQ JA TEM O NEERDTree
vim.cmd([[ nnoremap <c-e> :NvimTreeToggle<CR> ]])
vim.cmd([[ inoremap <c-e> <Esc>:NvimTreeToggle<CR>l ]])
vim.cmd([[ vnoremap <c-e> <Esc>:NvimTreeToggle<CR> ]])

-- Nvim Tree -- TODO VE RO QUE É NvimTreeToggle :: JA REMAPEEI COM TERRO C-N
-- set("n", "<C-n>", ":NvimTreeToggle<CR>", ns) 
-- set("n", "<Leader>n", ":NvimTreeFindFile<CR>", ns)

-- ARRUMAR

-- MAPS VIM
-- seleciona tudo >> C-a
vim.cmd([[ map <C-a> <esc>ggVG<esc> ]]) -- TODO
-- vim.cmd([[ inoremap <C-a> ggVG ]]) 
-- vim.cmd([[ nnoremap <C-a> ggVG ]]) 

-- Comentario

-- Buffers - tabulacao identar
set("n", "<Tab>", ":BufferLineCycleNext<CR>", ns)
set("n", "<S-Tab>", ":BufferLineCyclePrev<CR>", ns)
set("n", "<C-d>", ":bd<CR>", ns)
set("n", "<C-t>", ":tabnew <CR>", ns)


-- Edits -- Fechar selecionados com delimitadores
set("n", '<Leader>"', 'viw<ESC>a"<esc>bi"<esc>ela', ns)
set("n", "<Leader>'", "viw<ESC>a'<esc>bi'<esc>ela", ns)
set("n", "<Leader>(", "viw<ESC>a)<esc>bi(<esc>ela", ns)
set("n", "<Leader>[", "viw<ESC>a]<esc>bi[<esc>ela", ns)
set("n", "<Leader>{", "viw<ESC>a}<esc>bi{<esc>ela", ns)
set("n", "<Leader><", "viw<ESC>a><esc>bi<<esc>ela", ns)

-- Terminal
set("t", "<Esc>", "<C-\\><C-n><C-w><C-w>", ns)

-- Clean Search
set("n", "<Leader><Space>", ":let @/=''<CR>", ns)
set("n", "<Leader>ff", ":Telescore find_files<CR>", ns)

-- sair forcado
inoremap <C-qq> <esc>:wq!<cr>               " salva e fecha forcado :: i 
nnoremap <C-ss> :wq!<cr>                    " salva e fecha forçado :: n

-- FUNCOES


vim.cmd([[ 
  function! AutoC()
    call append(0, '#include <stdio.h>')
    call append(1, '')
    call append(2, 'int main( int argc , char **argv ){')
    call append(3, "  printf(\"Hello, World!\\n\");")
    call append(4, '  return 0;')
    call append(5, '}')
    call cursor(4, 17)
  endfunction
  autocmd BufNewFile *.c :call AutoC()
]])

-- SHORT KEY TO COMPILE
vim.cmd([[
function! Run()
  :echo 'Compiling...'
  :terminal make
  :bwipeout
endfunction

nnoremap <C-t> :call Run()<CR>
inoremap <C-t> :call Run()<CR>
vnoremap <C-t> :call Run()<CR>

]])

vim.cmd([[
	function! AutoCpp()
	  call append(0, '#include <iostream>')
	  call append(1, '')
	  call append(2, 'int main( int argc , char **argv ){')
	  call append(3, "  std::cout << \"Hello, World!\" << '\\n';")
	  call append(4, '  return 0;')
	  call append(5, '}')
	  call cursor(4, 17)
	endfunction	
        autocmd BufNewFile *.cpp :call AutoCpp()
]])
